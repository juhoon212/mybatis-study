<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.MyUserMapper">
	<insert id="insertUser" parameterType="MyUser">
		insert into myuser values(#{userId}, #{userName})
	</insert>
	
	<!-- 문제점 : 검색행의 컬럼명과 resultType 속성값으로 설정된 클래스의 필드명이 모두 다른 경우 resultType 속성값으로
	설정된 클래스의 객체 대신 NULL 제공 -->
	<!--<select id="selectUserList" resultType="MyUser">
		select * from myuser order by user_id
	</select>   -->
	
	<!--  해결법 - 1 : 검색행의 컬럼명을 resultType 속성값으로 설정된 클래스의 필드명과 같도록 검사 -->
	<!--  select 명령에서 Column Alias 기능을 이용하여 검색대상의 별칭을 필드명과 같도록 작성 -->
	
	<!--  <select id="selectUserList" resultType="MyUser">
		select user_id as userId, user_name as userName from myuser order by user_id
	</select> -->
	
	<!-- sql : SQL 명령을 구성하는 일부분의 문장을 등록하기 위한 엘리먼트 -->
	<!--  id 속성 : sql 엘리먼트를 구분하는 식별자를 속성값으로 설정 -->
	<!--  <sql id="myUserColumnAlias">
		user_id userId, user_name userName
	</sql>
		
	  include : sql 엘리먼트에 등록된 문장을 제공받아 SQL 명령에 포함하는 엘리먼트 -->	
	<!-- refid 속성 : sql 엘리먼트의 식별자(id 속성값)을 속성값으로 설정 -->
	<!--  <select id="selectUserList" resultType="MyUser">
		select <include refid="myUserColumnAlias"/> from myuser order by user_id
	</select> -->
	
	<!--  해결법-2 : mybatis 환경설정파일(mybatis-config.xml)의 setting 엘리먼트를 사용하여
	스네이크 표기법의 식별자를 카멜 표기법의 식별자로 자동 변환하는 기능 사용 -->
	
	<!--  해결법 -3 : resultMap 엘리먼트를 사용하여 검색행의 객체의 필드에 저장되도록 설정 - 수동 매핑 - -->
	<!--  하위 엘리먼트 : constructor, id, result, association, collection, discriminator -->
	<!-- type 속성 : resultMap 엘리먼트로 제공될 객체의 Java 자료형을 속성값으로 설정 -->
	<!--  Java 자료형 대신 typeAlias 엘리먼트로 설정된 별칭 사용 가능 -->
	<!--  id 속성 : resultMap 엘리먼트를 구분하기 위한 식별자를 속성값으로 설정 -->
	<resultMap type="MyUser" id="myUserResultMap">
		<id column="user_id" property="userId"></id>
		<result column="user_name" property="userName"></result>
	</resultMap>
	
	<select id="selectUserList" resultMap="myUserResultMap">
		select user_id, user_name from myuser order by user_id
	</select>
</mapper>

